service: madinax
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  apiGateway:
        binaryMediaTypes:
            - '*/*'
  environment:
    JWT_SECRET: madinaxSecret
    pictureBucket: ${self:custom.myMadinaBucket}
    region: us-east-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*   
        - s3:*
      Resource: '*'

plugins:
  - serverless-iam-roles-per-function

package:
  individually: true

custom:
  myMadinaBucket: my-madinax-bucket



functions:
  verify:
    handler: lambdas/verifyHandler.handler
    events:
      - http:
          path: /verify
          method: get
          cors: true # <-- CORS!
  login:
    handler: lambdas/loginHandler.handler
    events:
      - http:
          path: /login
          method: post
          cors: true # <-- CORS!
  register:
    handler: lambdas/registerHandler.handler
    events:
      - http:
          path: /register
          method: post
          cors: true # <-- CORS!
  imageUpload:
    handler: lambdas/imageUploadHandler.handler
    events:
      - http:
          path: /upload 
          method: post
    # environment:
    #   MY_BUCKET: ${self:custom.myMadinaBucket}
     


resources:
  Resources:
    pictureBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.myMadinaBucket}
        # AccessControl: PublicRead
    madinaxUsers:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: madinax-users 
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
         
        


    